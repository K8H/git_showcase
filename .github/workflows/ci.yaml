name: CI

on:
  pull_request:
    branches:
      - master
    types: [review_requested, assigned]
  merge_group:

jobs:
  check-author:
    runs-on: ubuntu-latest

    outputs:
      is_bot: ${{ steps.is_auth_bot.outputs.is_bot }}
      pr_author: ${{ steps.get-author.outputs.author }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get PR author
        id: get_author
        run: |          
          echo "author=$(jq -r .pull_request.user.login < $GITHUB_EVENT_PATH)" >> $GITHUB_OUTPUT

      - name: Get PR author
        id: get-author
        run: |
          pr_author=$(jq -r '.pull_request.user.login' < "$GITHUB_EVENT_PATH")
          echo "PR author is $pr_author"
          echo "author=$pr_author" >> $GITHUB_OUTPUT

      - name: Check if author is a bot
        id: is_auth_bot
        run: |
          if [[ "${{ steps.get-author.outputs.author }}" == *"[bot]" ]]; then
            echo "is_bot=true" >> $GITHUB_OUTPUT
          else
            echo "is_bot=false" >> $GITHUB_OUTPUT
          fi
          

  shared-tests:
    name: Shared Test Suite
    if: needs.check-author.outputs.is_bot == 'false'
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Cache pip
        uses: actions/cache@v3
        env:
          requirements: ${{ hashFiles('shared/requirements.txt') }}
          requirements-dev: ${{ hashFiles('shared/requirements-dev.txt') }}
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-test-${{ env.requirements }}-${{ env.requirements-dev }}

      - name: Install dependencies shared
        run: |
          pip install --upgrade pip
          pip install -r shared/requirements-dev.txt

      - name: Run tests shared
        run: |
          pytest
