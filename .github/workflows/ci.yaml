name: CI

on:
  pull_request:
    branches:
      - master
    types: [review_requested, assigned]
  merge_group:

jobs:
  check-author:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get PR author
        id: get_author
        run: |
          echo "author=$(jq -r .pull_request.user.login < $GITHUB_EVENT_PATH)" >> $GITHUB_OUTPUT

      - name: Check if author is a bot
        id: is_bot
        run: |
          if [[ "${{ steps.get_author.outputs.author }}" == *"[bot]" ]]; then
            echo "::set-output name=is_bot::true"
          else
            echo "::set-output name=is_bot::false"
          fi

      - name: Bypass status checks if PR is from a bot
        if: steps.is_bot.outputs.is_bot == 'true'
        run: |
          echo "Skipping status checks for bot PR"
        env:
          AUTH_BOT: 'true'

      - name: Bypass status checks if PR is from a bot
        if: steps.is_bot.outputs.is_bot == 'false'
        run: |
          echo "Skipping status checks for bot PR"
        env:
          AUTH_BOT: 'false'

  shared-tests:
    name: Shared Test Suite
    if: ${{ env.AUTH_BOT == 'false' }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Cache pip
        uses: actions/cache@v3
        env:
          requirements: ${{ hashFiles('shared/requirements.txt') }}
          requirements-dev: ${{ hashFiles('shared/requirements-dev.txt') }}
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-test-${{ env.requirements }}-${{ env.requirements-dev }}

      - name: Install dependencies shared
        run: |
          pip install --upgrade pip
          pip install -r shared/requirements-dev.txt

      - name: Run tests shared
        run: |
          pytest
