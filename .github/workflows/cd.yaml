name: CD
on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  REPO_NAME: ${{ github.repository }}
  PR_BRANCH: release-ci-${{ github.sha }}
  APP_NAME: shared

jobs:
  build:
    permissions:
      packages: write
      contents: write
      pull-requests: write

    runs-on: ubuntu-latest

    outputs:
      skipped: ${{ steps.changelog.outputs.skipped }}
      tag: ${{ steps.changelog.outputs.tag }}
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}
      version: ${{ steps.changelog.outputs.version }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Create Branch
        run: |
          git checkout -b ${{ env.PR_BRANCH }}
          git push --set-upstream origin ${{ env.PR_BRANCH }}

      - name: Downcase github.repository_owner
        run: |
          echo "REPO_OWNER=${GITHUB_REPOSITORY_OWNER@L}" >> $GITHUB_ENV
        env:
          GITHUB_REPOSITORY_OWNER: '${{ github.repository_owner }}'

      - name: Create Changelog
        uses: TriPSs/conventional-changelog-action@v5
        id: changelog
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}"
          git-branch: ${{ env.PR_BRANCH }}
          git-user-name: ${{ github.repository_owner }}
          git-user-email: "k8hofmann@gmail.com"
          skip-git-pull: true
          output-file: false
          version-file: .github/package.yaml
          create-summary: true

      - name: Create Changelog PR
        if: steps.changelog.outputs.skipped == 'false'
        run: |
          gh pr create --base master --head ${{ env.PR_BRANCH }} --title 'chore(release): ${{ steps.changelog.outputs.tag }} [skip-ci]' --body '${{ steps.changelog.outputs.clean_changelog }}'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Approve Changelog PR
        if: steps.changelog.outputs.skipped == 'false'
        run: |
          gh pr review --approve ${{ env.PR_BRANCH }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Merge Changelog PR
        if: steps.changelog.outputs.skipped == 'false'
        run: |
          gh pr merge --squash --auto --delete-branch ${{ env.PR_BRANCH }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag_name: ${{ steps.changelog.outputs.tag }}
          prerelease: false
          draft: false
          files: bin/*
          generate_release_notes: true
          name: ${{ steps.changelog.outputs.tag }}
          body: |
            <details>
              <summary>ðŸ¤– Autogenerated Conventional Changelog</summary>
            
            ${{ steps.changelog.outputs.clean_changelog }}
            </details>

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker
          install: true

      - name: Log in to GitHub Container Registry
        id: login-ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.REPO_OWNER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/${{ env.REPO_OWNER }}/${{ env.APP_NAME }}
          tags: |
            latest
            ${{ steps.changelog.outputs.version }}
            ${{ github.sha }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
